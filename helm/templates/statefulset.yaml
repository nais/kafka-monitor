apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "kafka_monitor.fullname" . }}
  labels:
    app: {{ template "kafka_monitor.name" . }}
    component: {{ .Values.name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "kafka_monitor.name" . }}
      component: {{ .Values.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        nais.io/logformat: simple
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/"
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app: {{ template "kafka_monitor.name" . }}
        component: {{ .Values.name }}
        release: {{ .Release.Name }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "kafka_monitor.serviceaccountname" . }}
{{- if .Values.vault_init.enabled }}
      initContainers:
      - name: vks
        image: {{ .Values.vault_init.image.repository }}:{{ .Values.vault_init.image.tag }}
        imagePullPolicy: IfNotPresent
        env:
        - name: VKS_VAULT_ADDR
          value: {{ .Values.vault_init.vks.vault_addr }}
        - name: VKS_AUTH_PATH
          value: {{ .Values.vault_init.vks.auth_path }}
        - name: VKS_KV_PATH
          value: {{ .Values.vault_init.vks.kv_path }}
        - name: VKS_VAULT_ROLE
          value: {{ .Values.vault_init.vks.vault_role }}
        - name: VKS_SECRET_DEST_PATH
          value: {{ .Values.vault_init.vks.secret_dest_path }}
        volumeMounts:
        - mountPath: {{ .Values.vault_init.vks.secret_dest_path }}
          name: vault-secrets
{{- end }}
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        terminationGracePeriodSeconds: 0
{{- if or .Values.vault_init.enabled .Values.truststore }}
        volumeMounts:
{{- if .Values.vault_init.enabled }}
        - mountPath: {{ .Values.vault_init.vks.secret_dest_path }}
          name: vault-secrets
{{- end }}
{{- if .Values.truststore }}
        - name: security
          mountPath: "/etc/kafka-security"
          readOnly: true
{{- end }}
{{- end }}
        env:
          - name: ZOOKEEPER_CONNECT
            value: {{ .Values.zookeeper_connect }}
          - name: BOOTSTRAP_SERVERS
            value: {{ .Values.bootstrap_servers }}
          - name: SECURITY_PROTOCOL
            value: {{ .Values.security_protocol }}
          - name: SASL_MECHANISM
            value: {{ .Values.sasl_mechanism }}
          - name: LOG_LEVEL
            value: {{ .Values.log_level }}
          - name: LOG_LEVEL_KAFKA
            value: {{ .Values.log_level_kafka }}
          - name: PRODUCE_DELAY
            value: "{{ .Values.produce_delay }}"
          - name: MONITOR_TOPIC
            value: {{ .Values.topic.name }}
          - name: CREATE_TOPIC
            value: "{{ .Values.topic.create }}"
          - name: REPLICATION_FACTOR
            value: "{{ .Values.topic.replication_factor }}"
          - name: PARTITIONS_TO_BROKERS_RATIO
            value: "{{ .Values.topic.partitions_to_brokers_ratio }}"
          {{- if .Values.jolokiaUrl }}
          - name: JOLOKIA_URL
            value: {{ .Values.jolokiaUrl }}
          {{- end }}
          {{- if .Values.jaasConfig }}
          - name: JAAS_CONFIG
            value: {{ .Values.jaasConfig }}
          {{- end }}
          {{- if .Values.truststore }}
          {{- if .Values.truststore.jks }}
          - name: TRUSTSTORE_LOCATION
            value: /etc/kafka-security/truststore
          {{- if .Values.truststore.password }}
          - name: TRUSTSTORE_PASSWORD
            value: {{ .Values.truststore.password }}
          {{- end }}
          {{- end }}
          {{- end }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: jolokia
          containerPort: 8778
          protocol: TCP
{{- if or .Values.vault_init.enabled .Values.truststore }}
      volumes:
{{- if .Values.vault_init.enabled }}
      - emptyDir:
          medium: Memory
        name: vault-secrets
{{- end }}
{{- if .Values.truststore }}
      - name: security
        secret:
          secretName: {{ template "kafka_monitor.fullname" . }}
{{- end }}
{{- end }}
